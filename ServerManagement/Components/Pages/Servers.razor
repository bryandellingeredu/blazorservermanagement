@page "/servers"
@page "/servers/back_from/{cityName}"
@inject NavigationManager NavigationManager
@rendermode InteractiveServer
@inject IServersEFCoreRepository ServersEFCoreRepository

<h3>Servers</h3>

<CitlyListComponent
@ref="cityListComponent"
SelectCityCallback="HandleCitySelection"
selectedCity="@this.selectedCity" />

<br />
<SearchBarComponent @ref="searchBarComponent" SearchServerCallback="HandleSearchServer" style="width: 1000px"/>

<br/>
<CascadingValue Name="SelectedCity" Value="@selectedCity">
    <ServerListComponent
    @rendermode="InteractiveServer"
    CityName="@this.selectedCity"
    SearchFilter="@this.searchFilter"
    />
</CascadingValue>
<p>
    <a href="/servers/add" class="btn btn-primary">Add Server</a>
</p>



@code {
    [Parameter]
    public string? CityName { get; set; }
    private List<Server>? servers;
    private string selectedCity = "Toronto";
    private string searchFilter = "";
    private CitlyListComponent? cityListComponent;
    private SearchBarComponent? searchBarComponent;

    private void HandleCitySelection(string cityName)
    {
        selectedCity = cityName;
        this.searchFilter = string.Empty;
        searchBarComponent?.ClearFilter();
    }

    private void HandleSearchServer(string searchFilter)
    {
        this.searchFilter = searchFilter;
        cityListComponent?.ClearSelection();
    }

    protected override void OnAfterRender(bool firstRender)
    {
        if (firstRender)
        {
            servers = ServersEFCoreRepository.GetServersByCity("Toronto");
            if (NavigationManager.Uri.Contains("back_from") && !string.IsNullOrWhiteSpace(CityName))
            {
                selectedCity = CityName;
                StateHasChanged();
            }
        }
    }
}
